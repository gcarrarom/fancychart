image:
  repo: gcarrarom/landing
  tag: 0.0.0
  pullSecrets: []

port: 80

deployment:
  enabled: true

recreate: false
env: []

# Volumes to be mounted from PVCs like this: - defaults to pvc if isNfs = false
# - name: vault-pvc # name of the PVC to be mounted
#   path: /data # path where the pvc will be mounted at
#   isNfs: true # wheter to connect using nfs or not
#   nfsPath: /data # path to mount at for the NFS server
#   server: some.server.com # nfs server
volumes: []

# Environment Variables from Secrets, can be set like this:
# - name: "ENV_VAR" #name of the environment variable
#   secretName: super-secret # Name of the kubernetes secret
#   key: password # key of the secret to be used.
#   secretRef: false # Whether to use it as a secret ref or not (uses all keys as environment variables)
envFromSecret: []

domain: fancywhale.ca
## Set the url value if you want to replace the entire hostname
# url: something.fancywhale.ca
clusterissuer: letsencrypt

ingress:
  enabled: true
  annotations: {}

service:
  enabled: true
  protocol: TCP
  # You can use ClusterIP or LoadBalancer Services
  # If you use LoadBalancer services, you could set the static IP address using:
  # loadBalancerIP: <ip address>
  # Make sure to research how that's going to be allocated.
  type: ClusterIP
  # Extra ports if you need more than 1
  # Example:
  # - port: 80
  #   protocol: UDP
  ports: []

resources:
  requests: {}
  limits: {}

###
# This is where you can define your node selector. 
# If you need to use GCP's node selector, you can use:
# gcp: <computer-class>
# Where computer class could be: "Scale-Out", "Balanced" or "General-purpose"
nodeSelector:
  enabled: false

###
# This is where you can define your Security Context settings
# You can setup the fsgroup setting by using this:
# fsgroup: <group ID>
# Where you can set any group ID that you need.
securityContext:
  enabled: false